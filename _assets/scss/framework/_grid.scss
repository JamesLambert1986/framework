.container {
    
    width: 100%;
    display: block;
    margin: 0 auto 0 auto;
    max-width: em($max-width);
	position: relative;

    clear: both;
    
    &:after {
        content:"";
        display:table;
        clear:both;
    }
    
    &:empty {
        padding: 0;
    }
    
    > * {
        
        margin-left: px($grid-gutter/2);
        margin-right: px($grid-gutter/2);
        
        margin-left: rem($grid-gutter/2);
        margin-right: rem($grid-gutter/2);
    }
    
    .container > & {
        
        width: calc(100% - #{em($gutter)});
    }
}

.grid {
    
    float: left;
    width: 100%;
    margin: 0;

    padding-left: em($grid-gutter/2);
    padding-right: em($grid-gutter/2);
    
}

.spacing {
    height: 1rem;
}

.spacing--2 {
    height: 2rem;
}
.spacing--3 {
    height: 3rem;
}
.spacing--4 {
    height: 4rem;
}


@for $i from 1 through $grid-sml-cols {

	.sml--#{$i},
	[data-sml="#{$i}"] {

		@extend .grid;
		width: 100/$grid-sml-cols * $i + 0%;
	}
}

.sml--right {
	float: right;
}

.sml--clear {
	clear: both;
}

.sml--hide {
	display: none;
}
.sml--show {
	display: inherit;
}

@include breakpoint(med) {

    .container {
        
        padding-left: em($grid-gutter/2);
        padding-right: em($grid-gutter/2);
    }
    
    @for $i from 1 through $grid-med-cols {

        .med--#{$i},
	    [data-med="#{$i}"] {

            @extend .grid;
            width: 100/$grid-med-cols * $i + 0%;
        }
    }
	
	@for $i from 1 through $grid-med-cols {

        .med--clear--#{$i}:nth-child(#{$i}n+1) {
			clear: left;
        }
    }
	
	@for $i from 1 through $grid-med-cols {

        .med--offset--#{$i} {

            margin-left: (100/$grid-med-cols * $i) + 0%;
        }
    }
    
    .med--left {
        float: left;
    }
    .med--right {
        float: right;
    }
    
    .med--clear--none {
        clear: none;
    }
    .med--clear {
        clear: both;
    }
	
    .med--hide {
        display: none;
    }
    .med--show {
        display: inherit;
    }
	
	.med--spacing {
		height: 1rem;
	}

	.med--spacing--2 {
		height: 2rem;
	}
	.med--spacing--3 {
		height: 3rem;
	}
	.med--spacing--4 {
		height: 4rem;
	}

	
}

@include breakpoint(lrg) {

    .container {
        
        padding-left: rem($gutter);
        padding-right: em($gutter);
    }
    
    @for $i from 1 through $grid-lrg-cols {

        .lrg--#{$i},
	    [data-lrg="#{$i}"] {

            @extend .grid;
            width: 100/$grid-lrg-cols * $i + 0%;
        }
    }
	
    @for $i from 1 through $grid-lrg-cols {
		
        .med--clear--#{$i}:nth-child(#{$i}n+1) {
			clear:none;
        }

        .lrg--clear--#{$i}:nth-child(#{$i}n+1) {
			clear: left;
        }
    }
	
    @for $i from 1 through $grid-lrg-cols {

        .lrg--offset--#{$i} {

            margin-left: (100/$grid-lrg-cols * $i) + 0%;
        }
    }
    
	.lrg--2-5 {

		@extend .grid;
		width: 100/$grid-lrg-cols * 2.5 + 0%;
	}
    
    .lrg--left {
        float: left;
    }
    .lrg--right {
        float: right;
    }
    
	.lrg--center {
		margin-left: auto;
		margin-right: auto;
		
        clear: both;
    	float: none;
	}
    
    .lrg--clear--none {
        clear: none;
    }
    .lrg--clear {
        clear: both;
    }
    
    .lrg--hide {
        display: none;
    }
    .lrg--show {
        display: inherit;
    }
	
	
	.lrg--spacing {
		height: 1rem;
	}
	.lrg--spacing--2 {
		height: 2rem;
	}
	.lrg--spacing--3 {
		height: 3rem;
	}
	.lrg--spacing--4 {
		height: 4rem;
	}

}